# Generated by GPT-4o according to the installation chapter, hope someone can test it.
# Source from XNM1's dotfiles.
# WARNING: PLEASE THINKING TWICE BEFORE INSTALLING HYPRLAND, Uninstall is unsupported yet.
#!/bin/bash

# Function to ask for user input to confirm actions
confirm() {
    read -p "$1 (y/n): " response
    if [[ ! "$response" =~ ^[Yy]$ ]]; then
        echo "Aborting."
        exit 1
    fi
}

# 1. Check and update device configuration using rg
echo "Searching for 'FIXME' in configuration files to customize settings..."
rg --hidden FIXME

# 2. Configure USBGuard in nixos/usb.nix
echo "Configuring USBGuard..."
echo "List your connected USB devices using 'lsusb' to configure USBGuard correctly."
confirm "Have you listed your USB devices and are you ready to configure USBGuard?"

# 3. Set up swap on LUKS if necessary
echo "Checking if swap on LUKS is properly configured..."
rg --hidden "luks-.*.device"
confirm "Is swap on LUKS set correctly? If not, please configure it manually or during installation."

# 4. Change default username and hostname using rg
echo "Updating username and hostname..."
rg --hidden 'xnm' | xargs sed -i 's/xnm/YOUR_USERNAME/g'
rg --hidden 'isitreal-laptop' | xargs sed -i 's/isitreal-laptop/YOUR_HOSTNAME/g'

# 5. Change git settings in home/.gitconfig and related files
echo "Updating personal git settings in .gitconfig files..."
sed -i 's/YourName/YourNewName/g' ~/home/.gitconfig
sed -i 's/YourEmail/YourNewEmail/g' ~/home/.gitconfig
confirm "Have you updated your git configuration?"

# 6. Enable flake support
echo "Enabling flake support..."
sed -i '/# Enable flake support/ s/^#//' /etc/nixos/configuration.nix
confirm "Do you want to enable flake support? (Rebuild the system after enabling flakes)"

# 7. Copy configuration files from home directory to $HOME
echo "Copying files from the home directory to $HOME..."
cp -r /etc/nixos/home/* $HOME/

# 8. Copy nixos configurations to /etc/nixos
echo "Copying NixOS configuration files to /etc/nixos..."
sudo cp -r /etc/nixos/* /etc/nixos/

# 9. Ensure ownership of files in /etc/nixos is root
echo "Ensuring the ownership of files in /etc/nixos is root..."
sudo chown -R root:root /etc/nixos

# 10. Run the NixOS rebuild with flakes support
echo "Running NixOS rebuild..."
sudo nixos-rebuild switch --flake /etc/nixos#YOUR_HOSTNAME --update-input nixpkgs --update-input rust-overlay --commit-lock-file --upgrade

# 11. GNOME settings import
echo "Importing GNOME settings..."
dconf load / < ~/home/.config/gnome_settings_backup.dconf
confirm "Do you want to import GNOME settings?"

# 12. Install dictionaries for Qutebrowser
echo "Installing dictionaries for Qutebrowser..."
QUTEBROWSER_DICT_PATH=$(find $(nix-store --query --outputs $(which qutebrowser)) -iname '*dictcli.py*' | head -1)
$QUTEBROWSER_DICT_PATH install en-US hi-IN
confirm "Do you want to install dictionaries for Qutebrowser?"

# 13. Apply Catppuccin theme for websites in your browser (Brave, Firefox, Chromium)
echo "Applying Catppuccin theme for websites in the browser..."
echo "Make sure you have installed the Stylus extension."
confirm "Have you installed the Stylus extension?"

# 14. Apply Catppuccin theme for Cool-Retro-Term
echo "Applying Catppuccin theme to Cool-Retro-Term..."
cool_retros_config="$HOME/.config/cool-retro-term-style.json"
if [ -f "$cool_retros_config" ]; then
    cool-retro-term --import "$cool_retros_config"
else
    echo "Catppuccin Cool-Retro-Term theme file not found."
fi

# 15. Final step: Rebuild and restart the system
echo "Finalizing the system setup..."
confirm "Ready to rebuild the system? This may take a while."

# Restart system or switch user session
echo "Rebuilding system..."
sudo nixos-rebuild switch

echo "Hyprland is now fully set up!"

exit 0

